#!/bin/bash
# This is a "symlink to a docker" call.

# Debug! Host target, so you can't use the `source` solution, you have to copy the _debug.sh file content directly.
# << docker-workflow-package/opt/wf-docker-workflow/lib/_debug.sh !!!
if [ ${WF_DEBUG:-0} -ge 1 ]; then
    [[ -f /.dockerenv ]] && echo -e "\033[1mDocker: \033[33m${WF_DOCKER_HOST_CHAIN}\033[0m"
    echo -e "\033[1mDEBUG\033[33m $(realpath "$0")\033[0m"
    SYMFONY_COMMAND_DEBUG="-vvv"
    DOCKER_DEBUG="-e WF_DEBUG=${WF_DEBUG}"
fi
[[ ${WF_DEBUG:-0} -ge 2 ]] && set -x

DOCKER_WORKFLOW_BASE_PATH=${DOCKER_WORKFLOW_BASE_PATH:-~/.wf-docker-workflow}
# Load env config
set -a
[ -f ${DOCKER_WORKFLOW_BASE_PATH}/config/env ] && . ${DOCKER_WORKFLOW_BASE_PATH}/config/env
set +a
WF_PROGRAM_REPOSITORY=${WF_PROGRAM_REPOSITORY:-git@github.com:fchris82/WfDockerWorkflow.git}

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
# YOU SHOULDN'T EDIT THIS FILE! If you want to extend the `wf` command, edit the `docker-workflow-package/opt/wf-docker-workflow/workflow.sh`
# file!
# You have to use this file, when you want to extend `wf` command that needs to use "host" instead of "docker container".
# Eg: the `--update` needs to use host.
#
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
case $1 in
    # !!! Don't extend here! Read above!
    -u|--update)
        git archive --remote=${WF_PROGRAM_REPOSITORY} ${2:-HEAD} install-wf.sh | tar xO > /tmp/install-wf.sh
        chmod +x /tmp/install-wf.sh
        /tmp/install-wf.sh
        rm /tmp/install-wf.sh
        echo "Cleaning the cache..."
        ${DOCKER_WORKFLOW_BASE_PATH}/bin/workflow_runner.sh wf --clean-cache >/dev/null
    ;;
    --rebuild)
        PULL="--pull"
        if [[ ${2} == "--no-pull" ]]; then
            PULL=""
        fi
        docker build --no-cache ${PULL} -t ${USER}/wf-user ~/.wf-docker-workflow
    ;;
    # !!! Don't extend here! Read above!
    *)
        ${DOCKER_WORKFLOW_BASE_PATH}/bin/workflow_runner.sh wf ${@}
    ;;
esac
