server {
    server_name {{ server.host }} _;
    root {{ project_path }}/web;

    client_max_body_size {{ server.max_post_size | lower }};

    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /app.php$is_args$args;
    }
    # DEV
    # This rule should only be placed on your development environment
    # In production, don't include this and don't deploy app_dev.php or config.php
    location ~ ^/(app_dev|config)\.php(/|$) {
        fastcgi_pass php:9003;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param REMOTE_ADDR          $http_x_real_ip;
        fastcgi_param HTTP_X_FORWARDED_FOR $http_x_real_ip;
        fastcgi_read_timeout {{ server.timeout }};
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS off;
        # Ez azért kell, hogy az app_dev.php-t el tudjuk érni ilyenkor
        fastcgi_param ENVIRONMENT Docker;
    }
    # PROD
    location ~ ^/app.php(/|$) {
        fastcgi_pass php:9003;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param REMOTE_ADDR          $http_x_real_ip;
        fastcgi_param HTTP_X_FORWARDED_FOR $http_x_real_ip;
        fastcgi_read_timeout {{ server.timeout }};
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS off;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    error_log "/var/log/nginx/error.log" {{ server.nginx_debug ? 'debug' : '' }};
    access_log "/var/log/nginx/access.log";

    {% if http_auth.enabled -%}
    # HTTP_AUTH enabled
    auth_basic "{{ http_auth.title }}";
    auth_basic_user_file /etc/nginx/.htpasswd;
    {%- endif %}

    {% if nginx.include_file -%}
    # INCLUDE extra config file
    {% set file = nginx.include_file | split(':') -%}
    include {{ file.1 }};
    {%- endif %}

}
